#!/usr/bin/env bash

# Read song titles through arguments
# and capitalize them correctly in most cases.

# Rules taken from http://aitech.ac.jp/~ckelly/midi/help/caps.html
# Old weird link, not guaranteed to work forever,
# but the Internet Archive does not seem to like
# URLs that contain tildes; follow at your own risk.
# Here’s an excerpt:
#
# [quote start]
# > 1. The first and last words are always capitalized, and all except the words listed below are capitalized.
# > 2. These are lower-case, unless they are the first word or last word.
# >
# >     articles: a, an, the
# >     conjunctions: and, but, or, nor
# >     prepositions that are less than five letters long: at, by, for, from, in, into, of, off, on, onto, out, over, to, up, with
# >     as (only if it is followed by a noun)
# >
# > 3. Prepositions are sometimes capitalized.
# >
# >     Prepositions are capitalized when they are the first or last word.
# >     Prepositions that are part of two-word "phrasal verbs" (Come On, Hold On, etc....) are capitalized.
# >     Prepositions that are over four letters long. (across, after, among, beyond, ...)
# >
# > 4. These short words are capitalized.
# > Some people occasionally forget to capitalize these.
# >
# >     also, be, if, than, that, thus, when
# >     as (if it is followed by a verb)
# [quote end]

# I added French prepositions.

# Note that results may be inconsistent if your platform has crappy locales
# and stuff. I had to add the “locales” package in my Debian 9 Docker image,
# otherwise “\b” was matching random stuff, like the interstice
# between “è” and “s”.

readonly MAX_ACRONYM_LENGTH=6

# Stuff that needs to be lowercase, except in phrasal verbs.
LIST_LOWER='(A|An|The|And|But|Or|Nor|At|By|For|From|In|Into|Of|Off|On|Onto|Out|Over|To|Up|Upon|Down|With|As|Along|Back|Away|Un|Une|Le|La|Les|Et|Mais|Ou|Ni|À|Aux|Par|Pour|De|Des|Du|Dans|Hors|Sur|Sous|Avec|Vers|En|Dès|Sans|Der|Des|Dem|Den|Ein|Eines|Einem|Einen|Die|Der|Der|Die|Eine|Einer|Einer|Eine|Das|Des|Dem|Das|Ein|Eines|Einem|Ein|Die|Der|Den|Die|Kein|Keine)'


for title in "$@"
do
    sed -r '
        # Assume every yelling word that is too long has low chances
        # of being an acronym and is probably just there because people
        # write metadata sloppily and put everything in caps.
        # Idem if multiple consecutive short yelling words.
        s/\b[[:upper:] '"'"'-]{'"${MAX_ACRONYM_LENGTH:?}"',}\b/\L&/g

        # Every word:
        s/\b([[:alnum:]])/\u\1/g
        
        # Prepositions and stuff:
        s/\b'"$LIST_LOWER"'\b/\l\1/g
        
        # Phrasal verbs:
        s/\bBeat(s?)([ -])up\b/Beat\1\2Up/g
        s/\bBlow(s?)([ -])out\b/Blow\1\2Out/g
        s/\bBlow(s?)([ -])up\b/Blow\1\2Up/g
        s/\bBreak(s?)([ -])down\b/Break\1\2Down/g
        s/\bBreak(s?)([ -])into\b/Break\1\2Into/g
        s/\bBreak(s?)([ -])up\b/Break\1\2Up/g
        s/\bBring(s?)([ -])up\b/Bring\1\2Up/g
        s/\bBring(s?)([ -])out\b/Bring\1\2Out/g
        s/\bCall(s|ed)?([ -])off\b/Call\1\2Off/g
        s/\bCall(s|ed)?([ -])on\b/Call\1\2On/g
        s/\bCall(s|ed)?([ -])up\b/Call\1\2Up/g
        s/\bCarry(s?)([ -])on\b/Carry\1\2On/g
        s/\bCome(s?)([ -])back\b/Come\1\2Back/g
        s/\bCome(s?)([ -])down\b/Come\1\2Down/g
        s/\bCome(s?)([ -])on\b/Come\1\2On/g
        s/\bCome(s?)([ -])out\b/Come\1\2Out/g
        s/\bCome(s?)([ -])over\b/Come\1\2Over/g
        s/\bDo(s?)([ -])over\b/Do\1\2Over/g
        s/\bFill(s|ed)?([ -])in\b/Fill\1\2In/g
        s/\bFill(s|ed)?([ -])out\b/Fill\1\2Out/g
        s/\bFind(s?)([ -])out\b/Find\1\2Out/g
        s/\bGet(s?)([ -])along\b/Get\1\2Along/g
        s/\bGet(s?)([ -])around\b/Get\1\2Around/g
        s/\bGet(s?)([ -])by\b/Get\1\2By/g
        s/\bGet(s?)([ -])over\b/Get\1\2Over/g
        s/\bGet(s?)([ -])out\b/Get\1\2Out/g
        s/\bGet(s?)([ -])through\b/Get\1\2Through/g
        s/\bGet(s?)([ -])up\b/Get\1\2Up/g
        s/\bGive(s?)([ -])back\b/Give\1\2Back/g
        s/\bGive(s?)([ -])up\b/Give\1\2Up/g
        s/\bGo(s?)([ -])along\b/Go\1\2Along/g
        s/\bGo(s?)([ -])away\b/Go\1\2Away/g
        s/\bGo(s?)([ -])on\b/Go\1\2On/g
        s/\bGo(s?)([ -])over\b/Go\1\2Over/g
        s/\bHand(s|ed)?([ -])in\b/Hand\1\2In/g
        s/\bHang(s|ed)?([ -])up\b/Hang\1\2Up/g
        s/\bHold(s?)([ -])on\b/Hold\1\2On/g
        s/\bHold(s?)([ -])up\b/Hold\1\2Up/g
        s/\bKeep(s?)([ -])on\b/Keep\1\2On/g
        s/\bKeep(s?)([ -])up\b/Keep\1\2Up/g
        s/\bLeave(s?)([ -])out\b/Leave\1\2Out/g
        s/\bLet(s?)([ -])down\b/Let\1\2Down/g
        s/\bLook(s|ed)?([ -])for\b/Look\1\2For/g
        s/\bLook(s|ed)?([ -])into\b/Look\1\2Into/g
        s/\bLook(s|ed)?([ -])like\b/Look\1\2Like/g
        s/\bLook(s|ed)?([ -])out\b/Look\1\2Out/g
        s/\bLook(s|ed)?([ -])over\b/Look\1\2Over/g
        s/\bLook(s|ed)?([ -])up\b/Look\1\2Up/g
        s/\bMake(s?)([ -])out\b/Make\1\2Out/g
        s/\bMake(s?)([ -])up\b/Make\1\2Up/g
        s/\bPack(s|ed)?([ -])up\b/Pack\1\2Up/g
        s/\bPass(s|ed)?([ -])out\b/Pass\1\2Out/g
        s/\bPick(s|ed)?([ -])out\b/Pick\1\2Out/g
        s/\bPick(s|ed)?([ -])up\b/Pick\1\2Up/g
        s/\bPut(s?)([ -])away\b/Put\1\2Away/g
        s/\bPut(s?)([ -])off\b/Put\1\2Off/g
        s/\bPut(s?)([ -])on\b/Put\1\2On/g
        s/\bPut(s?)([ -])out\b/Put\1\2Out/g
        s/\bPut(s?)([ -])up\b/Put\1\2Up/g
        s/\bRoll(s|ed)?([ -])over\b/Roll\1\2Over/g
        s/\bRun(s?)([ -])into\b/Run\1\2Into/g
        s/\bRun(s?)([ -])out\b/Run\1\2Out/g
        s/\bRun(s?)([ -])over\b/Run\1\2Over/g
        s/\bShow(s?)([ -])up\b/Show\1\2Up/g
        s/\bTake(s?)([ -])after\b/Take\1\2After/g
        s/\bTake(s?)([ -])back\b/Take\1\2Back/g
        s/\bTake(s?)([ -])off\b/Take\1\2Off/g
        s/\bTake(s?)([ -])on\b/Take\1\2On/g
        s/\bTake(s?)([ -])up\b/Take\1\2Up/g
        s/\bTalk(s|ed)?([ -])back\b/Talk\1\2Back/g
        s/\bTalk(s|ed)?([ -])over\b/Talk\1\2Over/g
        s/\bThrow(s?)([ -])away\b/Throw\1\2Away/g
        s/\bTr(y|ie[ds])([ -])on\b/Tr\1\2On/g
        s/\bTr(y|ie[ds])([ -])out\b/Tr\1\2Out/g
        s/\bTurn(s|ed)?([ -])down\b/Turn\1\2Down/g
        s/\bTurn(s|ed)?([ -])in\b/Turn\1\2In/g
        s/\bTurn(s|ed)?([ -])off\b/Turn\1\2Off/g
        s/\bTurn(s|ed)?([ -])on\b/Turn\1\2On/g
        s/\bUse(s?)([ -])up\b/Use\1\2Up/g
        s/\bWait(s|ed)?([ -])on\b/Wait\1\2On/g
        s/\bWake(s?)([ -])up\b/Wake\1\2Up/g
        s/\bWarm(s|ed)?([ -])up\b/Warm\1\2Up/g
        
        # Contractions such as "I ve" with apostrophes.
        # Also replaces non-ascii apostrophes with
        # a simple single quote. Don’t get me wrong, I love Unicode
        # apostrophes, but I don’t trust music players that much.
        s/([[:alpha:]])'"['´’]"'([[:upper:]])/\1'"'"'\l\2/g
        # Mostly for French, switch capitalization for some contractions.
        s/\b([dlctsm]'"'"')([[:alpha:]])/\L\1\u\2/ig
        
        s/[ \t]*\.{3,}[ \t]*/…/g
        s/…(.)/… \1/g
        
        # Word after a dash-like thing.
        # Also use an en dash systematically and fix spacing.
        s/([ \t]*[–—−-]+[ \t]+|[ \t]+[–—−-]+[ \t]*)([[:alnum:]])/ – \u\2/g
        
        # Similar thing after a bunch of other characters:
        # “…”, “(”, “[”, “:”, “/”…
        s,([…:;.(/\[])([^[:alpha:]]*)([[:alpha:]]),\1\2\u\3,g
        
        # I prefer “foo / bar” to “foo/bar”.
        # NB: I’d love to use U+202F around the “/” but some players display
        # it as a rectangle due to crappy fonts.
        s,[ \t]*/[ \t]*, / ,g
        s,/[ \t]*/,//,g
        
        # Spacing between “)” and “(”.
        s,\)[ \t]*\(,) (,g
        
        # Only capitalize in-parentheses parts if it’s not a
        # part of a bigger word: “foo(s)”
        s,([[:alpha:]]\()([[:alpha:]]),\1\l\2,g
        # Similarly, avoid capitalizing the remainder of a word
        # that starts with an in-parentheses part: “(de)bunk”
        s,(\([[:alpha:]]+\))([[:alpha:]]),\1\l\2,g
        
        # Roman numerals.
        # https://stackoverflow.com/a/10441405
        s/\bM{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})\b/\U&/ig
        s/\bMIX\b/Mix/g
        # Conflict with French contractions.
        s/\b[DLM]'"'"'/\L&/g
        
        # First word:
        s/^([^[:alnum:]]*)([[:alnum:]()])/\1\u\2/
        # Last word:
        s/([[:alnum:]()]*)([^[:alnum:]]*)$/\u\1\2/
        # In both cases:
        # • We skip non-alnum characters, to allow final punctuation
        #   and the like.
        # • We allow “(foo)” prefixes and suffixes by counting
        #   parentheses as parts of the words, somewhat.
    ' <<< "$title"
done

exit 0
